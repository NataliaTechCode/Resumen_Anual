import { defineComponent as r, ref as m, openBlock as l, createElementBlock as s, createVNode as u, Transition as w, withCtx as b, createCommentVNode as d, createElementVNode as o, normalizeClass as a, createTextVNode as h, toDisplayString as f, unref as c } from "vue";
const T = { class: "copy-wrap" }, M = {
  key: 0,
  class: "copied-text"
}, L = { key: 0 }, V = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-link-45deg",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" }),
  /* @__PURE__ */ o("path", { d: "M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" })
], -1), j = [
  V
], P = /* @__PURE__ */ r({
  __name: "ButtonCopy",
  props: {
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = t.url || window.location.href, n = m(!1);
    function B() {
      n.value = !0, navigator.clipboard.writeText(e), setTimeout(() => n.value = !1, 1500);
    }
    return (p, z) => (l(), s("div", T, [
      u(w, {
        name: "slide-up-fade",
        mode: "in-out"
      }, {
        default: b(() => [
          n.value ? (l(), s("span", M, "Copied!")) : d("", !0)
        ]),
        _: 1
      }),
      o("button", {
        class: a(["btn-link btn-link-copy", [{ "is-rounded": p.isRounded }, { "is-circled": p.isCircled }, { "is-bordered": p.isBordered }]]),
        title: "Copy URL",
        onClick: B
      }, [
        h(f(p.text) + " ", 1),
        p.hasIcon ? (l(), s("span", L, j)) : d("", !0)
      ], 2)
    ]));
  }
}), U = ["href"], E = { key: 0 }, H = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-envelope-fill",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z" })
], -1), F = [
  H
], Z = /* @__PURE__ */ r({
  __name: "ButtonEmail",
  props: {
    text: { default: "Add text" },
    url: { default: "#" },
    to: {},
    subject: { default: "Subject" },
    content: { default: "Add content" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `mailto:?subject=${i.subject}&to=${e.to}&body=${e.content}%20${e.url}`,
      class: a(["btn-link btn-link-email", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Email",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", E, F)) : d("", !0)
    ], 10, U));
  }
}), q = ["href"], S = { key: 0 }, N = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-facebook",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z" })
], -1), G = [
  N
], D = /* @__PURE__ */ r({
  __name: "ButtonFacebook",
  props: {
    title: { default: "Title" },
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://facebook.com/sharer/sharer.php?u=${i.url}&t=${e.title}&quote=`,
      class: a(["btn-link btn-link-facebook", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Facebook",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", S, G)) : d("", !0)
    ], 10, q));
  }
}), J = ["href"], K = { key: 0 }, O = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-pinterest",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M8 0a8 8 0 0 0-2.915 15.452c-.07-.633-.134-1.606.027-2.297.146-.625.938-3.977.938-3.977s-.239-.479-.239-1.187c0-1.113.645-1.943 1.448-1.943.682 0 1.012.512 1.012 1.127 0 .686-.437 1.712-.663 2.663-.188.796.4 1.446 1.185 1.446 1.422 0 2.515-1.5 2.515-3.664 0-1.915-1.377-3.254-3.342-3.254-2.276 0-3.612 1.707-3.612 3.471 0 .688.265 1.425.595 1.826a.24.24 0 0 1 .056.23c-.061.252-.196.796-.222.907-.035.146-.116.177-.268.107-1-.465-1.624-1.926-1.624-3.1 0-2.523 1.834-4.84 5.286-4.84 2.775 0 4.932 1.977 4.932 4.62 0 2.757-1.739 4.976-4.151 4.976-.811 0-1.573-.421-1.834-.919l-.498 1.902c-.181.695-.669 1.566-.995 2.097A8 8 0 1 0 8 0z" })
], -1), Q = [
  O
], X = /* @__PURE__ */ r({
  __name: "ButtonPinterest",
  props: {
    text: { default: "Add text" },
    description: { default: "Add the description" },
    url: { default: "#" },
    mediaUrl: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://pinterest.com/pin/create/button/?url=${i.url}&media=${e.mediaUrl}&description=${e.description}`,
      class: a(["btn-link btn-link-pinterest", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Pinterest",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", K, Q)) : d("", !0)
    ], 10, J));
  }
}), Y = ["href"], x = { key: 0 }, ee = /* @__PURE__ */ o("svg", {
  "aria-hidden": "true",
  focusable: "false",
  "data-prefix": "fab",
  "data-icon": "get-pocket",
  class: "svg-inline--fa fa-get-pocket fa-w-14",
  role: "img",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 448 512"
}, [
  /* @__PURE__ */ o("path", {
    fill: "currentColor",
    d: "M407.6 64h-367C18.5 64 0 82.5 0 104.6v135.2C0 364.5 99.7 464 224.2 464c124 0 223.8-99.5 223.8-224.2V104.6c0-22.4-17.7-40.6-40.4-40.6zm-162 268.5c-12.4 11.8-31.4 11.1-42.4 0C89.5 223.6 88.3 227.4 88.3 209.3c0-16.9 13.8-30.7 30.7-30.7 17 0 16.1 3.8 105.2 89.3 90.6-86.9 88.6-89.3 105.5-89.3 16.9 0 30.7 13.8 30.7 30.7 0 17.8-2.9 15.7-114.8 123.2z"
  })
], -1), te = [
  ee
], oe = /* @__PURE__ */ r({
  __name: "ButtonPocket",
  props: {
    title: { default: "Add title" },
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://getpocket.com/save?url=${i.url}&title=${e.title}`,
      class: a(["btn-link btn-link-pocket", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Pocket",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", x, te)) : d("", !0)
    ], 10, Y));
  }
}), le = ["href"], se = { key: 0 }, ie = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-reddit",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M6.167 8a.831.831 0 0 0-.83.83c0 .459.372.84.83.831a.831.831 0 0 0 0-1.661zm1.843 3.647c.315 0 1.403-.038 1.976-.611a.232.232 0 0 0 0-.306.213.213 0 0 0-.306 0c-.353.363-1.126.487-1.67.487-.545 0-1.308-.124-1.671-.487a.213.213 0 0 0-.306 0 .213.213 0 0 0 0 .306c.564.563 1.652.61 1.977.61zm.992-2.807c0 .458.373.83.831.83.458 0 .83-.381.83-.83a.831.831 0 0 0-1.66 0z" }),
  /* @__PURE__ */ o("path", { d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.828-1.165c-.315 0-.602.124-.812.325-.801-.573-1.9-.945-3.121-.993l.534-2.501 1.738.372a.83.83 0 1 0 .83-.869.83.83 0 0 0-.744.468l-1.938-.41a.203.203 0 0 0-.153.028.186.186 0 0 0-.086.134l-.592 2.788c-1.24.038-2.358.41-3.17.992-.21-.2-.496-.324-.81-.324a1.163 1.163 0 0 0-.478 2.224c-.02.115-.029.23-.029.353 0 1.795 2.091 3.256 4.669 3.256 2.577 0 4.668-1.451 4.668-3.256 0-.114-.01-.238-.029-.353.401-.181.688-.592.688-1.069 0-.65-.525-1.165-1.165-1.165z" })
], -1), ne = [
  ie
], de = /* @__PURE__ */ r({
  __name: "ButtonReddit",
  props: {
    title: { default: "Add title" },
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://reddit.com/submit/?url=${i.url}&title=${e.title}`,
      class: a(["btn-link btn-link-reddit", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Reddit",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", se, ne)) : d("", !0)
    ], 10, le));
  }
}), re = ["href"], ae = { key: 0 }, ue = /* @__PURE__ */ o("svg", {
  "aria-hidden": "true",
  focusable: "false",
  "data-prefix": "fab",
  "data-icon": "tumblr-square",
  class: "svg-inline--fa fa-tumblr-square fa-w-14",
  role: "img",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 448 512"
}, [
  /* @__PURE__ */ o("path", {
    fill: "currentColor",
    d: "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-82.3 364.2c-8.5 9.1-31.2 19.8-60.9 19.8-75.5 0-91.9-55.5-91.9-87.9v-90h-29.7c-3.4 0-6.2-2.8-6.2-6.2v-42.5c0-4.5 2.8-8.5 7.1-10 38.8-13.7 50.9-47.5 52.7-73.2.5-6.9 4.1-10.2 10-10.2h44.3c3.4 0 6.2 2.8 6.2 6.2v72h51.9c3.4 0 6.2 2.8 6.2 6.2v51.1c0 3.4-2.8 6.2-6.2 6.2h-52.1V321c0 21.4 14.8 33.5 42.5 22.4 3-1.2 5.6-2 8-1.4 2.2.5 3.6 2.1 4.6 4.9l13.8 40.2c1 3.2 2 6.7-.3 9.1z"
  })
], -1), ce = [
  ue
], he = /* @__PURE__ */ r({
  __name: "ButtonTumblr",
  props: {
    text: { default: "Add text" },
    title: { default: "Add title" },
    content: { default: "Add your content" },
    url: { default: "#" },
    mediaUrl: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://www.tumblr.com/widgets/share/tool?posttype=link&title=${i.title}&caption=${e.url}&content=${e.content}&canonicalUrl=${e.url}&shareSource=tumblr_share_button`,
      class: a(["btn-link btn-link-tumblr", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Twitter",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", ae, ce)) : d("", !0)
    ], 10, re));
  }
}), fe = ["href"], pe = { key: 0 }, Be = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-telegram",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z" })
], -1), me = [
  Be
], we = /* @__PURE__ */ r({
  __name: "ButtonTelegram",
  props: {
    message: {},
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://t.me/share/url?url=${i.url}&text=${e.message}`,
      class: a(["btn-link btn-link-telegram", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Telegram",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", pe, me)) : d("", !0)
    ], 10, fe));
  }
}), be = ["href"], ye = { key: 0 }, ge = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-linkedin",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z" })
], -1), ke = [
  ge
], $e = /* @__PURE__ */ r({
  __name: "ButtonLinkedIn",
  props: {
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://www.linkedin.com/sharing/share-offsite/?url=${i.url}`,
      class: a(["btn-link btn-link-linkedin", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "LinkedIn",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", ye, ke)) : d("", !0)
    ], 10, be));
  }
}), Ce = ["href"], _e = { key: 0 }, ve = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-twitter",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z" })
], -1), Ae = [
  ve
], Ie = /* @__PURE__ */ r({
  __name: "ButtonTwitter",
  props: {
    titlle: {},
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://twitter.com/intent/tweet/?text=${i.title}&url=${e.url}`,
      class: a(["btn-link btn-link-twitter", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "Twitter",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", _e, Ae)) : d("", !0)
    ], 10, Ce));
  }
}), Re = ["href"], We = { key: 0 }, ze = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-whatsapp",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z" })
], -1), Te = [
  ze
], Me = /* @__PURE__ */ r({
  __name: "ButtonWhatsapp",
  props: {
    message: {},
    text: { default: "Add text" },
    url: { default: "#" },
    hasIcon: { type: Boolean, default: !1 },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://api.whatsapp.com/send?text=${i.message}%20${e.url}`,
      class: a(["btn-link btn-link-whatsapp", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }]]),
      title: "WhatsApp",
      rel: "nofollow noopener",
      target: "_blank"
    }, [
      h(f(e.text) + " ", 1),
      e.hasIcon ? (l(), s("span", We, Te)) : d("", !0)
    ], 10, Re));
  }
}), Le = ["href"], Ve = /* @__PURE__ */ o("svg", {
  fill: "currentColor",
  class: "bi bi-facebook",
  width: "24",
  height: "24",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z" })
], -1), je = [
  Ve
], y = /* @__PURE__ */ r({
  __name: "ButtonFacebookIcon",
  props: {
    title: { default: "Title" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://facebook.com/sharer/sharer.php?u=${i.url}&t=${e.title}&quote=`,
      class: a(["btn-link-icon btn-link-facebook-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Facebook",
      rel: "nofollow noopener",
      target: "_blank"
    }, je, 10, Le));
  }
}), Pe = ["href"], Ue = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-whatsapp",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z" })
], -1), Ee = [
  Ue
], g = /* @__PURE__ */ r({
  __name: "ButtonWhatsappIcon",
  props: {
    message: { default: "Message" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://api.whatsapp.com/send?text=${i.message}%20${e.url}`,
      class: a(["btn-link-icon btn-link-whatsapp-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Whatsapp",
      rel: "nofollow noopener",
      target: "_blank"
    }, Ee, 10, Pe));
  }
}), He = ["href"], Fe = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-twitter",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z" })
], -1), Ze = [
  Fe
], k = /* @__PURE__ */ r({
  __name: "ButtonTwitterIcon",
  props: {
    title: { default: "Title" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://twitter.com/intent/tweet/?text=${i.title}&url=${e.url}`,
      class: a(["btn-link-icon btn-link-twitter-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Twitter",
      rel: "nofollow noopener",
      target: "_blank"
    }, Ze, 10, He));
  }
}), qe = ["href"], Se = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-linkedin",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z" })
], -1), Ne = [
  Se
], $ = /* @__PURE__ */ r({
  __name: "ButtonLinkedInIcon",
  props: {
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://www.linkedin.com/sharing/share-offsite/?url=${i.url}`,
      class: a(["btn-link-icon btn-link-linkedin-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "LinkedIn",
      rel: "nofollow noopener",
      target: "_blank"
    }, Ne, 10, qe));
  }
}), Ge = ["href"], De = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-reddit",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M6.167 8a.831.831 0 0 0-.83.83c0 .459.372.84.83.831a.831.831 0 0 0 0-1.661zm1.843 3.647c.315 0 1.403-.038 1.976-.611a.232.232 0 0 0 0-.306.213.213 0 0 0-.306 0c-.353.363-1.126.487-1.67.487-.545 0-1.308-.124-1.671-.487a.213.213 0 0 0-.306 0 .213.213 0 0 0 0 .306c.564.563 1.652.61 1.977.61zm.992-2.807c0 .458.373.83.831.83.458 0 .83-.381.83-.83a.831.831 0 0 0-1.66 0z" }),
  /* @__PURE__ */ o("path", { d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.828-1.165c-.315 0-.602.124-.812.325-.801-.573-1.9-.945-3.121-.993l.534-2.501 1.738.372a.83.83 0 1 0 .83-.869.83.83 0 0 0-.744.468l-1.938-.41a.203.203 0 0 0-.153.028.186.186 0 0 0-.086.134l-.592 2.788c-1.24.038-2.358.41-3.17.992-.21-.2-.496-.324-.81-.324a1.163 1.163 0 0 0-.478 2.224c-.02.115-.029.23-.029.353 0 1.795 2.091 3.256 4.669 3.256 2.577 0 4.668-1.451 4.668-3.256 0-.114-.01-.238-.029-.353.401-.181.688-.592.688-1.069 0-.65-.525-1.165-1.165-1.165z" })
], -1), Je = [
  De
], C = /* @__PURE__ */ r({
  __name: "ButtonRedditIcon",
  props: {
    title: { default: "Title" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://reddit.com/submit/?url=${i.url}&title=${e.title}`,
      class: a(["btn-link-icon btn-link-reddit-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Reddit",
      rel: "nofollow noopener",
      target: "_blank"
    }, Je, 10, Ge));
  }
}), Ke = ["href"], Oe = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-pinterest",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M8 0a8 8 0 0 0-2.915 15.452c-.07-.633-.134-1.606.027-2.297.146-.625.938-3.977.938-3.977s-.239-.479-.239-1.187c0-1.113.645-1.943 1.448-1.943.682 0 1.012.512 1.012 1.127 0 .686-.437 1.712-.663 2.663-.188.796.4 1.446 1.185 1.446 1.422 0 2.515-1.5 2.515-3.664 0-1.915-1.377-3.254-3.342-3.254-2.276 0-3.612 1.707-3.612 3.471 0 .688.265 1.425.595 1.826a.24.24 0 0 1 .056.23c-.061.252-.196.796-.222.907-.035.146-.116.177-.268.107-1-.465-1.624-1.926-1.624-3.1 0-2.523 1.834-4.84 5.286-4.84 2.775 0 4.932 1.977 4.932 4.62 0 2.757-1.739 4.976-4.151 4.976-.811 0-1.573-.421-1.834-.919l-.498 1.902c-.181.695-.669 1.566-.995 2.097A8 8 0 1 0 8 0z" })
], -1), Qe = [
  Oe
], _ = /* @__PURE__ */ r({
  __name: "ButtonPinterestIcon",
  props: {
    description: { default: "Add the description" },
    url: { default: "#" },
    mediaUrl: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://pinterest.com/pin/create/button/?url=${i.url}&media=${e.mediaUrl}&description=${e.description}`,
      class: a(["btn-link-icon btn-link-pinterest-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Pinterest",
      rel: "nofollow noopener",
      target: "_blank"
    }, Qe, 10, Ke));
  }
}), Xe = ["href"], Ye = /* @__PURE__ */ o("svg", {
  "aria-hidden": "true",
  focusable: "false",
  "data-prefix": "fab",
  "data-icon": "tumblr-square",
  class: "svg-inline--fa fa-tumblr-square fa-w-14",
  role: "img",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 448 512"
}, [
  /* @__PURE__ */ o("path", {
    fill: "currentColor",
    d: "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-82.3 364.2c-8.5 9.1-31.2 19.8-60.9 19.8-75.5 0-91.9-55.5-91.9-87.9v-90h-29.7c-3.4 0-6.2-2.8-6.2-6.2v-42.5c0-4.5 2.8-8.5 7.1-10 38.8-13.7 50.9-47.5 52.7-73.2.5-6.9 4.1-10.2 10-10.2h44.3c3.4 0 6.2 2.8 6.2 6.2v72h51.9c3.4 0 6.2 2.8 6.2 6.2v51.1c0 3.4-2.8 6.2-6.2 6.2h-52.1V321c0 21.4 14.8 33.5 42.5 22.4 3-1.2 5.6-2 8-1.4 2.2.5 3.6 2.1 4.6 4.9l13.8 40.2c1 3.2 2 6.7-.3 9.1z"
  })
], -1), xe = [
  Ye
], v = /* @__PURE__ */ r({
  __name: "ButtonTumblrIcon",
  props: {
    title: { default: "Title" },
    url: { default: "#" },
    content: { default: "Add your content" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://www.tumblr.com/widgets/share/tool?posttype=link&title=${i.title}&caption=${e.url}&content=${e.content}&canonicalUrl=${e.url}&shareSource=tumblr_share_button`,
      class: a(["btn-link-icon btn-link-tumblr-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Facebook",
      rel: "nofollow noopener",
      target: "_blank"
    }, xe, 10, Xe));
  }
}), et = ["href"], tt = /* @__PURE__ */ o("svg", {
  "aria-hidden": "true",
  focusable: "false",
  "data-prefix": "fab",
  "data-icon": "get-pocket",
  class: "svg-inline--fa fa-get-pocket fa-w-14",
  role: "img",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 448 512"
}, [
  /* @__PURE__ */ o("path", {
    fill: "currentColor",
    d: "M407.6 64h-367C18.5 64 0 82.5 0 104.6v135.2C0 364.5 99.7 464 224.2 464c124 0 223.8-99.5 223.8-224.2V104.6c0-22.4-17.7-40.6-40.4-40.6zm-162 268.5c-12.4 11.8-31.4 11.1-42.4 0C89.5 223.6 88.3 227.4 88.3 209.3c0-16.9 13.8-30.7 30.7-30.7 17 0 16.1 3.8 105.2 89.3 90.6-86.9 88.6-89.3 105.5-89.3 16.9 0 30.7 13.8 30.7 30.7 0 17.8-2.9 15.7-114.8 123.2z"
  })
], -1), ot = [
  tt
], A = /* @__PURE__ */ r({
  __name: "ButtonPocketIcon",
  props: {
    title: { default: "Title" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://getpocket.com/save?url=${i.url}&title=${e.title}`,
      class: a(["btn-link-icon btn-link-pocket-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Reddit",
      rel: "nofollow noopener",
      target: "_blank"
    }, ot, 10, et));
  }
}), lt = ["href"], st = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-envelope-fill",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z" })
], -1), it = [
  st
], I = /* @__PURE__ */ r({
  __name: "ButtonEmailIcon",
  props: {
    to: { default: "Title" },
    subject: { default: "Subject" },
    content: { default: "Add the content" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `mailto:?subject=${i.subject}&to=${e.to}&body=${e.content}%20${e.url}`,
      class: a(["btn-link-icon btn-link-email-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Email",
      rel: "nofollow noopener",
      target: "_blank"
    }, it, 10, lt));
  }
}), nt = { class: "copy-wrap" }, dt = {
  key: 0,
  class: "copied-text"
}, rt = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-link-45deg",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" }),
  /* @__PURE__ */ o("path", { d: "M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" })
], -1), at = [
  rt
], R = /* @__PURE__ */ r({
  __name: "ButtonCopyIcon",
  props: {
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t, e = i.url || window.location.href, n = m(!1);
    function B() {
      n.value = !0, navigator.clipboard.writeText(e), setTimeout(() => n.value = !1, 1500);
    }
    return (p, z) => (l(), s("div", nt, [
      u(w, {
        name: "slide-up-fade",
        mode: "in-out"
      }, {
        default: b(() => [
          n.value ? (l(), s("span", dt, "Copied!")) : d("", !0)
        ]),
        _: 1
      }),
      o("button", {
        class: a(["btn-link-icon btn-link-copy-icon", [
          { "is-rounded": i.isRounded },
          { "is-circled": p.isCircled },
          { "is-bordered": p.isBordered },
          { "is-whited": p.isAllWhite || p.isWhited }
        ]]),
        title: "Copy URL",
        onClick: B
      }, at, 2)
    ]));
  }
}), ut = ["href"], ct = /* @__PURE__ */ o("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  fill: "currentColor",
  class: "bi bi-telegram",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ o("path", { d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z" })
], -1), ht = [
  ct
], W = /* @__PURE__ */ r({
  __name: "ButtonTelegramIcon",
  props: {
    message: { default: "Title" },
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    isWhited: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("a", {
      href: `https://t.me/share/url?url=${e.url}&text=${i.message}`,
      class: a(["btn-link-icon btn-link-telegram-icon", [{ "is-rounded": e.isRounded }, { "is-circled": e.isCircled }, { "is-bordered": e.isBordered }, { "is-whited": e.isAllWhite || e.isWhited }]]),
      title: "Telegram",
      rel: "nofollow noopener",
      target: "_blank"
    }, ht, 10, ut));
  }
}), ft = { class: "btn-link-group" }, pt = { key: 0 }, Bt = { key: 1 }, mt = { key: 2 }, wt = { key: 3 }, bt = { key: 4 }, yt = { key: 5 }, gt = { key: 6 }, kt = { key: 7 }, $t = { key: 8 }, Ct = { key: 9 }, _t = { key: 10 }, vt = /* @__PURE__ */ r({
  __name: "ButtonGroup",
  props: {
    url: { default: "#" },
    isRounded: { type: Boolean, default: !1 },
    isCircled: { type: Boolean, default: !1 },
    isBordered: { type: Boolean, default: !1 },
    isAllWhite: { type: Boolean, default: !1 },
    title: { default: "" },
    message: { default: "" },
    content: { default: "" },
    description: { default: "" },
    mediaUrl: { default: "" },
    to: { default: "" },
    subject: { default: "" },
    facebookIcon: { type: Boolean, default: !1 },
    whatsappIcon: { type: Boolean, default: !1 },
    telegramIcon: { type: Boolean, default: !1 },
    twitterIcon: { type: Boolean, default: !1 },
    linkedInIcon: { type: Boolean, default: !1 },
    redditIcon: { type: Boolean, default: !1 },
    pinterestIcon: { type: Boolean, default: !1 },
    tumblrIcon: { type: Boolean, default: !1 },
    pocketIcon: { type: Boolean, default: !1 },
    emailIcon: { type: Boolean, default: !1 },
    copyIcon: { type: Boolean, default: !1 }
  },
  setup(t) {
    const i = t;
    return (e, n) => (l(), s("ul", ft, [
      e.facebookIcon ? (l(), s("li", pt, [
        u(c(y), {
          isRounded: i.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          title: e.title,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "title", "url"])
      ])) : d("", !0),
      e.whatsappIcon ? (l(), s("li", Bt, [
        u(c(g), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          message: e.message,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "message", "url"])
      ])) : d("", !0),
      e.telegramIcon ? (l(), s("li", mt, [
        u(c(W), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          message: e.message,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "message", "url"])
      ])) : d("", !0),
      e.twitterIcon ? (l(), s("li", wt, [
        u(c(k), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          title: e.title,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "title", "url"])
      ])) : d("", !0),
      e.linkedInIcon ? (l(), s("li", bt, [
        u(c($), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "url"])
      ])) : d("", !0),
      e.redditIcon ? (l(), s("li", yt, [
        u(c(C), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          title: e.title,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "title", "url"])
      ])) : d("", !0),
      e.pinterestIcon ? (l(), s("li", gt, [
        u(c(_), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          description: e.description,
          mediaUrl: e.mediaUrl,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "description", "mediaUrl", "url"])
      ])) : d("", !0),
      e.tumblrIcon ? (l(), s("li", kt, [
        u(c(v), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          title: e.title,
          content: e.content,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "title", "content", "url"])
      ])) : d("", !0),
      e.pocketIcon ? (l(), s("li", $t, [
        u(c(A), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          title: e.title,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "title", "url"])
      ])) : d("", !0),
      e.emailIcon ? (l(), s("li", Ct, [
        u(c(I), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          to: e.to,
          subject: e.subject,
          content: e.content,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "to", "subject", "content", "url"])
      ])) : d("", !0),
      e.copyIcon ? (l(), s("li", _t, [
        u(c(R), {
          isRounded: e.isRounded,
          isCircled: e.isCircled,
          isBordered: e.isBordered,
          isAllWhite: e.isAllWhite,
          url: e.url
        }, null, 8, ["isRounded", "isCircled", "isBordered", "isAllWhite", "url"])
      ])) : d("", !0)
    ]));
  }
}), It = {
  install: (t) => {
    t.component("ButtonFacebook", D), t.component("ButtonWhatsapp", Me), t.component("ButtonTelegram", we), t.component("ButtonTwitter", Ie), t.component("ButtonLinkedIn", $e), t.component("ButtonReddit", de), t.component("ButtonPinterest", X), t.component("ButtonTumblr", he), t.component("ButtonPocket", oe), t.component("ButtonEmail", Z), t.component("ButtonCopy", P), t.component("FacebookIcon", y), t.component("WhatsappIcon", g), t.component("TwitterIcon", k), t.component("LinkedInIcon", $), t.component("RedditIcon", C), t.component("PinterestIcon", _), t.component("TumblrIcon", v), t.component("PocketIcon", A), t.component("EmailIcon", I), t.component("CopyIcon", R), t.component("TelegramIcon", W), t.component("ButtonGroupIcons", vt);
  }
};
export {
  P as ButtonCopy,
  Z as ButtonEmail,
  D as ButtonFacebook,
  vt as ButtonGroupIcons,
  $e as ButtonLinkedIn,
  X as ButtonPinterest,
  oe as ButtonPocket,
  de as ButtonReddit,
  we as ButtonTelegram,
  he as ButtonTumblr,
  Ie as ButtonTwitter,
  Me as ButtonWhatsapp,
  R as CopyIcon,
  I as EmailIcon,
  y as FacebookIcon,
  $ as LinkedInIcon,
  _ as PinterestIcon,
  A as PocketIcon,
  C as RedditIcon,
  W as TelegramIcon,
  v as TumblrIcon,
  k as TwitterIcon,
  g as WhatsappIcon,
  It as default
};
